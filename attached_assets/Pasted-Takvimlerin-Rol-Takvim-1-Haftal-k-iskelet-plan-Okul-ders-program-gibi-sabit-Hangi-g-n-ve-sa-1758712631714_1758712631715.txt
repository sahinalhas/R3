Takvimlerin Rolü:

Takvim 1: Haftalık "iskelet" plan. Okul ders programı gibi sabit: Hangi gün ve saatte hangi ders çalışılacak? (Ör: Pazartesi 08:00-09:30 Matematik).
Takvim 2: İçerik doldurma planı. Takvim 1'deki saatlere konuları otomatik yerleştirir (Ör: O Matematik saatinde "Sayılar" konusu işlenecek).


Neden İki Takvim? Takvim 1 sabit ve genel (zaman yönetimi), Takvim 2 dinamik ve içerik odaklı (ilerleme takibi). Bu ayrım, planı esnek kılar: Takvim 1 nadiren değişir, Takvim 2 konuları tamamlandıkça güncellenir.
Kullanıcı Akışı: Koç, ders/konuları yükler → Öğrencileri ekler → Her öğrenci için Takvim 1'i oluşturur → Sistem otomatik Takvim 2'yi üretir → İlerleme takip edilir, raporlar alınır.


2. Takvim 1'in Detaylı Tanımı ve İşleyişi

Amaç: Haftalık ders programını sabitlemek. Öğrencinin hangi gün ve saatte hangi dersi çalışacağını belirler. Sabit bir çerçeve gibi çalışır (her hafta tekrar eder, nadiren değişir).
Özellikler:

Görünüm: FullCalendar.js ile haftalık takvim (Pazartesi-Pazar, saat dilimleri: 07:00-24:00, 30 dakikalık aralıklar).
Eklemeler: Dersler sürükle-bırak ile eklenir (koç tarafından).
Kontroller:

Çakışma: Aynı saatte birden fazla ders eklenemez. (Ör: 08:00'de Matematik varsa, Fizik eklenemez → Uyarı: "Bu saatte başka bir ders var!").
Süre Dengesi: Haftalık toplam süre hesaplanır. <5 saat: "Çalışma süren çok düşük!" >10 saat: "Plan çok yoğun!".


Veri Saklama: Her plan, calisma_plani tablosuna kaydedilir (tarih, başlangıç/bitiş saati, ders_id, ogrenci_id).


Kullanım Senaryosu: Koç, bir öğrenci için Pazartesi 16:00-17:30 Matematik ekler. Sistem çakışma kontrolü yapar, kaydeder.
Örnek Tablo Görünümü (Haftalık):













































SaatPazartesiSalıÇarşambaPerşembeCumaCumartesiPazar08:00-09:30MatematikFizik14:00-15:30MatematikMatematikFizik18:00-19:30Matematik



3. Takvim 2'nin Detaylı Tanımı ve İşleyişi

Amaç: Takvim 1'deki ders saatlerine konuları otomatik yerleştirmek. Konuların ilerlemesini takip eder (kalan süre, tamamlanma).
Özellikler:

Görünüm: FullCalendar.js ile tarih bazlı takvim (gerçek tarihler: Ör: 1 Nisan 2025 Pazartesi).
Yerleştirme: Konular, sira numarasına göre sırayla eklenir. Tamamlanmamış konuları önceliklendirir.
Kontroller:

Süre Takibi: Bir konunun kalan süresi, ders bloğu süresine göre bölünür. Kalan kısım bir sonraki uygun bloğa taşınır.
Tamamlanma: Kalan süre = 0 olursa tamamlandi = 1. Koç, tamamlanmış konuyu manuel tekrar ekleyebilir (tik kaldırır).
Otomatik: Takvim 1'den beslenir, manuel müdahale minimal.


Veri Saklama: Her ilerleme, konu_ilerleme tablosuna kaydedilir (ogrenci_id, konu_id, tamamlanan_sure, kalan_sure, tamamlandi).


Kullanım Senaryosu: Takvim 1'de Matematik saati varsa, sistem "Sayılar" (60 dk) konusunu yerleştirir. 90 dk'lık blokta 60 dk tamamlanır, kalan bir sonraki bloğa taşınır.
Örnek Tablo Görünümü (Tarih Bazlı):













































TarihSaatDersKonu Adıİşlenen SüreKalan Süre1 Nisan Pazartesi16:00-17:30MatematikSayılar60 dk0 dk1 Nisan Pazartesi16:00-17:30MatematikKümeler30 dk60 dk3 Nisan Çarşamba18:00-19:30MatematikKümeler60 dk0 dk4 Nisan Perşembe14:00-15:30FizikElektrik90 dk30 dk



4. Takvim 1 ve Takvim 2 Arasındaki İlişki (Veri Akışı, Senkronizasyon ve Algoritma)

Bağımlılık: Takvim 2, Takvim 1 olmadan çalışamaz. Takvim 1 "çerçeve" (zaman slotları), Takvim 2 "içerik" (konular).
Veri Akışı:

Koç, Takvim 1'i oluşturur → calisma_plani tablosu dolar.
Sistem, Takvim 1'deki slotları tarar → Her ders slotu için tamamlanmamış konuları çeker (konu_ilerleme ve konular tablolarından).
Konular yerleştirilir → konu_ilerleme güncellenir.
Değişiklikler: Takvim 1'de slot değişirse (ekleme/silme/taşıma), Takvim 2 otomatik yeniden hesaplanır.


Senkronizasyon:

Otomatik: Takvim 1 güncellendiğinde, backend (Flask) bir trigger ile Takvim 2'yi yeniler.
Dinamik: Konu tamamlanırsa, Takvim 2'de sıradaki konu görünür.


Analoji: Takvim 1 = Okul ders programı (Pazartesi Matematik saati). Takvim 2 = O saatte işlenecek müfredat (Sayılar konusu). Müfredat bitmezse kalan bir sonraki derse taşınır.